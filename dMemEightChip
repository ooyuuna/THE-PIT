module dMemEightChip(addr, clk, dataIn, readWrite, reset, dataOut);

input [31:0] addr;
input clk, readWrite, reset;
input [31:0] dataIn;
output reg [31:0] dataOut;

reg enable0 = 0;
reg enable1 = 0;
reg enable2 = 0;
reg enable3 = 0;
reg enable4 = 0;
reg enable5 = 0;
reg enable6 = 0;
reg enable7 = 0;

wire [31:0] data0;
wire [31:0] data1;
wire [31:0] data2;
wire [31:0] data3;
wire [31:0] data4;
wire [31:0] data5;
wire [31:0] data6;
wire [31:0] data7;

reg [31:0] editedAddr;

dMemBase chip0 (editedAddr, clk, enable0, dataIn, readwrite, reset, data0);
dMemBase chip1 (editedAddr, clk, enable1, dataIn, readwrite, reset, data1);
dMemBase chip2 (editedAddr, clk, enable2, dataIn, readwrite, reset, data2);
dMemBase chip3 (editedAddr, clk, enable3, dataIn, readwrite, reset, data3);
dMemBase chip4 (editedAddr, clk, enable4, dataIn, readwrite, reset, data4);
dMemBase chip5 (editedAddr, clk, enable5, dataIn, readwrite, reset, data5);
dMemBase chip6 (editedAddr, clk, enable6, dataIn, readwrite, reset, data6);
dMemBase chip7 (editedAddr, clk, enable7, dataIn, readwrite, reset, data7);

always @(posedge clk) begin
editedAddr = {22'b0000000000000000000000, addr[9:0]};


case (addr[12:10])
	3'b000: begin
		enable0 <= 1;
		enable1 <= 0;
		enable2 <= 0;
		enable3 <= 0;
		enable4 <= 0;
		enable5 <= 0;
		enable6 <= 0;
		enable7 <= 0;
		dataOut = data0;
		end
	3'b001: begin
		enable0 <= 0;
		enable1 <= 1;
		enable2 <= 0;
		enable3 <= 0;
		enable4 <= 0;
		enable5 <= 0;
		enable6 <= 0;
		enable7 <= 0;
		dataOut = data1;
		end 
	3'b010: begin
		enable0 <= 0;
		enable1 <= 0;
		enable2 <= 1;
		enable3 <= 0;
		enable4 <= 0;
		enable5 <= 0;
		enable6 <= 0;
		enable7 <= 0;
		dataOut = data2;
		end
	3'b011: begin
		enable0 <= 0;
		enable1 <= 0;
		enable2 <= 0;
		enable3 <= 1;
		enable4 <= 0;
		enable5 <= 0;
		enable6 <= 0;
		enable7 <= 0;
		dataOut = data3;
		end
	3'b100: begin
		enable0 <= 0;
		enable1 <= 0;
		enable2 <= 0;
		enable3 <= 0;
		enable4 <= 1;
		enable5 <= 0;
		enable6 <= 0;
		enable7 <= 0;
		dataOut = data4;
		end
	3'b101: begin
		enable0 <= 0;
		enable1 <= 0;
		enable2 <= 0;
		enable3 <= 0;
		enable4 <= 0;
		enable5 <= 1;
		enable6 <= 0;
		enable7 <= 0;
		dataOut = data5;
		end
	3'b110: begin
		enable0 <= 0;
		enable1 <= 0;
		enable2 <= 0;
		enable3 <= 0;
		enable4 <= 0;
		enable5 <= 0;
		enable6 <= 1;
		enable7 <= 0;
		dataOut = data6;
		end
	3'b111: begin
		enable0 <= 0;
		enable1 <= 0;
		enable2 <= 0;
		enable3 <= 0;
		enable4 <= 0;
		enable5 <= 0;
		enable6 <= 0;
		enable7 <= 1;
		dataOut = data7;
		end
		
		default: dataOut = 0;
		
endcase




end //end always




endmodule
